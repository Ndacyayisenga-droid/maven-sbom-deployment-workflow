name: Fetch and Deploy SBOMs to DependencyTrack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:

jobs:
  read-repos:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Read release.json and convert to matrix
        id: set-matrix
        run: |
          JSON=$(jq -c '{include: [.[]]}' release.json)
          echo "matrix=$JSON" >> $GITHUB_OUTPUT

  fetch-versions:
    needs: read-repos
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.read-repos.outputs.matrix) }}
      fail-fast: false
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Fetch versions for project
        id: set-matrix
        run: |
          groupPath=$(echo "${{ matrix.groupId }}" | tr '.' '/')
          artifactId=${{ matrix.artifactId }}
          url="https://repo1.maven.org/maven2/$groupPath/$artifactId/maven-metadata.xml"

          versions=$(curl -s -f "$url" | xmllint --format - 2>/dev/null | \
            grep '<version>' | sed -E 's/.*<version>([^<]+)<\/version>.*/\1/' | \
            grep -v SNAPSHOT || echo "")

          matrix_json=$(echo "$versions" | jq -R -s -c '
            split("\n") | map(select(length > 0)) |
            map({
              name: "${{ matrix.name }}",
              groupId: "${{ matrix.groupId }}",
              artifactId: "${{ matrix.artifactId }}",
              projectName: "${{ matrix.projectName }}",
              version: .
            }) | { include: . }')

          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT

  upload-sboms:
    needs: fetch-versions
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.fetch-versions.outputs.matrix) }}
      fail-fast: false
      max-parallel: 30
    steps:
      - name: Create SBOM directory
        run: mkdir -p sboms

      - name: Download SBOM
        id: download-sbom
        run: |
          GROUP_PATH=$(echo "${{ matrix.groupId }}" | tr '.' '/')
          ARTIFACT_ID=${{ matrix.artifactId }}
          VERSION=${{ matrix.version }}
          JSON_SBOM_URL="https://repo1.maven.org/maven2/$GROUP_PATH/$ARTIFACT_ID/$VERSION/$ARTIFACT_ID-$VERSION-cyclonedx.json"
          XML_SBOM_URL="https://repo1.maven.org/maven2/$GROUP_PATH/$ARTIFACT_ID/$VERSION/$ARTIFACT_ID-$VERSION-cyclonedx.xml"

          JSON_SBOM_FILE="sboms/$ARTIFACT_ID-$VERSION-cyclonedx.json"
          XML_SBOM_FILE="sboms/$ARTIFACT_ID-$VERSION-cyclonedx.xml"
          SBOM_FILE=""

          if curl -s -f -o "$JSON_SBOM_FILE" "$JSON_SBOM_URL"; then
            echo "Downloaded JSON SBOM"
            SBOM_FILE="$JSON_SBOM_FILE"
            echo "sbom_downloaded=true" >> $GITHUB_OUTPUT
            echo "sbom_file=$SBOM_FILE" >> $GITHUB_OUTPUT
          elif curl -s -f -o "$XML_SBOM_FILE" "$XML_SBOM_URL"; then
            echo "Downloaded XML SBOM"
            SBOM_FILE="$XML_SBOM_FILE"
            echo "sbom_downloaded=true" >> $GITHUB_OUTPUT
            echo "sbom_file=$SBOM_FILE" >> $GITHUB_OUTPUT
          else
            echo "No SBOM found"
            echo "sbom_downloaded=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Upload SBOM to DependencyTrack
        if: steps.download-sbom.outputs.sbom_downloaded == 'true'
        uses: DependencyTrack/gh-upload-sbom@v3
        with:
          serverHostname: 'api.dependencytrack.open-elements.cloud'
          apiKey: ${{ secrets.DEPENDENCYTRACK_API_KEY }}
          projectName: ${{ matrix.projectName }}
          projectVersion: ${{ matrix.version }}
          bomFilename: ${{ steps.download-sbom.outputs.sbom_file }}
          autoCreate: true
