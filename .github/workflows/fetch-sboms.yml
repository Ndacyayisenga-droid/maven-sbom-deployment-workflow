name: Fetch and Deploy SBOMs to DependencyTrack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:

jobs:
  read-repos:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.set-matrix.outputs.projects }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read release.json and split to project list
        id: set-matrix
        run: |
          JSON=$(cat release.json | jq -c '[.[] | {name, groupId, artifactId, projectName}]')
          echo "projects=$JSON" >> $GITHUB_OUTPUT

  fetch-and-upload-sboms:
    needs: read-repos
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.read-repos.outputs.projects) }}
      fail-fast: false
      max-parallel: 10
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils jq

      - name: Prepare SBOM directory
        run: mkdir -p sboms

      - name: Fetch versions and download/upload SBOMs
        env:
          DTRACK_API_KEY: ${{ secrets.DEPENDENCYTRACK_API_KEY }}
        run: |
          name="${{ matrix.project.name }}"
          groupId="${{ matrix.project.groupId }}"
          artifactId="${{ matrix.project.artifactId }}"
          projectName="${{ matrix.project.projectName }}"

          groupPath=$(echo "$groupId" | tr '.' '/')
          metadataUrl="https://repo1.maven.org/maven2/$groupPath/$artifactId/maven-metadata.xml"

          echo "Fetching versions for $artifactId"
          versions=$(curl -s -f "$metadataUrl" | xmllint --format - 2>/dev/null | \
            grep '<version>' | sed -E 's/.*<version>([^<]+)<\/version>.*/\1/' | \
            grep -v SNAPSHOT || echo "")

          if [ -z "$versions" ]; then
            echo "No versions found for $artifactId"
            exit 0
          fi

          for version in $versions; do
            echo "Processing $artifactId:$version"
            JSON_URL="https://repo1.maven.org/maven2/$groupPath/$artifactId/$version/$artifactId-$version-cyclonedx.json"
            XML_URL="https://repo1.maven.org/maven2/$groupPath/$artifactId/$version/$artifactId-$version-cyclonedx.xml"

            JSON_FILE="sboms/$artifactId-$version-cyclonedx.json"
            XML_FILE="sboms/$artifactId-$version-cyclonedx.xml"
            SBOM_FILE=""
            DOWNLOAD_SUCCESS=false

            for i in {1..3}; do
              if curl -s -f -o "$JSON_FILE" "$JSON_URL"; then
                echo "Downloaded JSON SBOM for $artifactId:$version"
                SBOM_FILE="$JSON_FILE"
                DOWNLOAD_SUCCESS=true
                break
              fi
              sleep 1
            done

            if [ "$DOWNLOAD_SUCCESS" = false ]; then
              for i in {1..3}; do
                if curl -s -f -o "$XML_FILE" "$XML_URL"; then
                  echo "Downloaded XML SBOM for $artifactId:$version"
                  SBOM_FILE="$XML_FILE"
                  DOWNLOAD_SUCCESS=true
                  break
                fi
                sleep 1
              done
            fi

            if [ "$DOWNLOAD_SUCCESS" = true ]; then
              echo "Uploading SBOM $SBOM_FILE for $projectName:$version"
              curl -X PUT \
                -H "X-Api-Key: $DTRACK_API_KEY" \
                -F "projectName=$projectName" \
                -F "projectVersion=$version" \
                -F "autoCreate=true" \
                -F "bom=@$SBOM_FILE" \
                https://api.dependencytrack.open-elements.cloud/api/v1/bom
            else
              echo "No SBOM found for $artifactId:$version"
            fi
          done
